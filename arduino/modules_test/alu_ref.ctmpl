#include <stdint.h>
#include <avr/io.h>

uint8_t scratch;

uint8_t flags_of_add8(uint8_t a, uint8_t b)
{
    /* We need to assign the value somewhere or
       the operation will be optimized away.
       The scratch variable can optionally be
       removed from ASM file.
     */
    scratch = a + b;
    return SREG;
}

uint8_t flags_of_sub8(uint8_t a, uint8_t b)
{
    /* We need to assign the value somewhere or
       the operation will be optimized away.
       The scratch variable can optionally be
       removed from ASM file.
     */
    scratch = a - b;
    return SREG;
}

uint8_t add8_set_carry(uint8_t a, uint8_t b)
{
    /* Edit the generated ASM to set carry bit and
       use adc instead:

       sec
       adc
        */
    return a + b;
}

uint8_t sub8_set_carry(uint8_t a, uint8_t b)
{
    /* Edit the generated ASM to set carry bit and
       use sbc instead:

       sec
       sbc
        */
    return a - b;
}

uint8_t flags_of_add8_with_c(uint8_t a, uint8_t b)
{
    /* We need to assign the value somewhere or
       the operation will be optimized away.
       The scratch variable can optionally be
       removed from ASM file.

       Edit the generated ASM to set carry bit and
       use adc instead:

       sec
       adc
     */
    scratch = a + b;
    return SREG;
}

uint8_t flags_of_sub8_with_c(uint8_t a, uint8_t b)
{
    /* We need to assign the value somewhere or
       the operation will be optimized away.
       The scratch variable can optionally be
       removed from ASM file.

       Edit the generated ASM to set carry bit and
       use sbc instead:

       sec
       sbc
     */
    scratch = a - b;
    return SREG;
}
